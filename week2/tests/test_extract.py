import os
import pytest

from ..app.services.extract import extract_action_items, extract_action_items_llm


def test_extract_bullets_and_checkboxes():
    text = """
    Notes from meeting:
    - [ ] Set up database
    * implement API extract endpoint
    1. Write tests
    Some narrative sentence.
    """.strip()

    items = extract_action_items(text)
    assert "Set up database" in items
    assert "implement API extract endpoint" in items
    assert "Write tests" in items


# ASSIGNMENT 2: GENERATED BY AI
requires_api = pytest.mark.skipif(
    not os.getenv("OPENAI_API_KEY"), reason="OPENAI_API_KEY not set"
)


@requires_api
def test_llm_extract_bullets_returns_list_of_strings():
    text = """
    - [ ] Set up database
    - [ ] Write tests for extractor
    - [ ] Update documentation
    """.strip()
    items = extract_action_items_llm(text)
    assert isinstance(items, list)
    assert len(items) >= 3
    assert all(isinstance(x, str) and x.strip() for x in items)


@requires_api
def test_llm_extract_keywords_returns_multiple_items():
    text = """
    Action: Add logging
    Todo: Refactor extract module
    Next: Document endpoints
    """.strip()
    items = extract_action_items_llm(text)
    assert isinstance(items, list)
    assert len(items) >= 3


@requires_api
def test_llm_extract_empty_input_is_list():
    items = extract_action_items_llm("")
    assert isinstance(items, list)
    assert all(isinstance(x, str) for x in items)
